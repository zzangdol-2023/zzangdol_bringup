<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="test_car">
  <!-- ****************** ROBOT CONSTANTS *******************************  -->
  <xacro:property name="TRUE" value="true" />
  <xacro:property name="FALSE" value="false" />
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <!-- base_width = 0.185m, base_length = 0.445 ~ 0.45m, base_height = 0.15m -->
  <xacro:property name="base_width" value="0.185"/> 
  <xacro:property name="base_length" value="0.445"/>
  <xacro:property name="base_height" value="0.15"/>
	
  <!-- Define the shape of the robot's wheels in meters -->
  <!-- wheel_radius = 0.0315 ~ 0.0381m wheel_width = 0.0254 ~ 0.0381m  -->
  <xacro:property name="wheel_radius" value="0.0348"/>
  <xacro:property name="wheel_width" value="0.0317"/>

  <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->
  <!-- Define the gap between the wheel and chassis along y-axis in meters -->
  <xacro:property name="wheel_ygap" value="0.015"/>

  <!-- Position the wheels along the z-axis -->
  <xacro:property name="wheel_zoff" value="0.05"/>

  <!-- Position the wheels along the x-axis -->
  <xacro:property name="wheel_xoff" value="0.155"/>

  <!-- Inertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <!-- Define the center of the main robot chassis projected on the ground -->	
  <link name="base_footprint">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </link>

  <!-- The base footprint of the robot is located underneath the chassis -->
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0 0 ${(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>
  
  <!-- Body -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
  </link>
  <!-- *********************** DRIVE WHEELS ******************************  -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect steering driving">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="White">
          <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
        </material>
      </visual>
      
      <!-- <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
      <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}"/> -->
    </link>
    <xacro:if value="${driving}">
      <joint name="${prefix}_driving_joint" type="revolute">
        <parent link="base_link"/>
        <child link="${prefix}_link"/>
        <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
        <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/>
        <axis xyz="0 1 0"/>
      </joint>
    </xacro:if>

    <!-- Steering (45 ~ -45 degree)-->
    <xacro:if value="${steering}">
      <joint name="${prefix}_steering_joint" type="revolute">
        <parent link="base_link"/>
        <child link="${prefix}_link"/>
        <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
        <limit upper="0.7854" lower="-0.7854" effort="10" velocity="1.0"/>
        <axis xyz="0 0 1"/>
      </joint>
    </xacro:if>
  </xacro:macro>
  <!-- front wheels -->
  <xacro:wheel prefix="fwheel_l" x_reflect="1" y_reflect="1" steering="${TRUE}" driving="${FALSE}"/>
  <xacro:wheel prefix="fwheel_r" x_reflect="1" y_reflect="-1" steering="${TRUE}" driving="${FALSE}"/>
  <!-- rear wheels -->
  <xacro:wheel prefix="rwheel_l" x_reflect="-1" y_reflect="1" steering="${FALSE}" driving="${TRUE}"/>
  <xacro:wheel prefix="rwheel_r" x_reflect="-1" y_reflect="-1" steering="${FALSE}" driving="${TRUE}"/>


  <!-- Lidar Sensor -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="0.03" length="0.01"/>
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1"/>
      </material>
    </visual>
  </link>
  <joint name="lidar_joint" type="fixed">
    <origin xyz="0.15 0 0.1" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="lidar_link"/>
  </joint>

  <!-- IMU -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.001"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>
  </link>
  <joint name="imu_joint" type="fixed">
    <origin xyz="0.09 0 0.08" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
</robot>